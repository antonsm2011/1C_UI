#Область ПрограммныйИнтерфейс

Процедура Создать (Этот) Экспорт
	
	Этот.Результат = Новый Диаграмма;
	
	ЗадатьНачальныеНастройки(Этот);
	
КонецПроцедуры

Процедура СФормировать(Этот) Экспорт
	
	//Для каждого Параметр Из Этот.Параметры Цикл
	//	
	//	Если Не ЗначениеЗаполнено(Параметр.Значение) Тогда
	//		КодОшибки = 1;
	//		Дашборды.СообщитьОбОшибке(КодОшибки);
	//	КонецЕсли;
	//	
	//КонецЦикла;
	
	СформироватьСтоимостьКапитала(Этот);
	
КонецПроцедуры

Процедура РазместитьВИнтерфейсе(Форма, Этот) Экспорт
	
	Этот.ПриватныеСвойства.ОбработчикЛегенды.ИмяСобытия = "Нажатие";
	Этот.ПриватныеСвойства.ОбработчикЛегенды.Действие = "ОткрытьОтчетСтоимостьКапитала";
	Этот.ПриватныеСвойства.ГруппаЭлементаЛегенды = "ГруппаСтоимостьКапиталаЛегенда";
	
	ДашбордыФормы.ЗаполнитьЛегенду(Форма, Этот);
	
	Форма.СтоимостьКапиталаДиаграмма = Этот.Результат;
	
КонецПроцедуры

#КонецОбласти

Процедура СформироватьСтоимостьКапитала(Этот)
	
	Этот.Результат.Очистить();
	
	Если Этот.Параметры.Интервал = Перечисления.ИнтервалПериода.Месяц Тогда
		Периодичность = "День";
	Иначе
		Периодичность = "Месяц";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода", Этот.Параметры.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", Этот.Параметры.ОкончаниеПериода);
	ВалютаРегл = ОбщегоНазначенияУИ.ПолучитьВалютуРегламентированногоУчета();
	Запрос.УстановитьПараметр("ВалютаРуб", ВалютаРегл);
	Запрос.УстановитьПараметр("Валюта", Этот.Параметры.Валюта);

	Запрос.Текст = ЗапросыВспомогательныеДанные.ТекстЗапросаСтоимостьКапитала();
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "День", Периодичность);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ТабРезультат = Новый ТаблицаЗначений;
	ТабРезультат.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(9,0)));
	ТабРезультат.Колонки.Добавить("СуммаВВалюте", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(9,0)));
	ТабРезультат.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	ТабРезультат.Колонки.Добавить("Валюта", Новый ОписаниеТипов("СправочникСсылка.Валюты"));
	
	ДополнениеПериода = ЗапросыВспомогательныеДанные.ДополнениеПериода(
		Этот.Параметры.НачалоПериода, Этот.Параметры.ОкончаниеПериода, Периодичность);
		
	ВыборкаВалют = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаВалют.Следующий() Цикл
		
		Если ВыборкаВалют.СуммаВВалюте = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СохраненноеЗначение = 0;
		Сумма = 0;
		Выборка = ВыборкаВалют.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Серия = Этот.Результат.УстановитьСерию(ВыборкаВалют.Валюта);
		Серия.Маркер = ТипМаркераДиаграммы.Нет;
		Серия.Текст = ВыборкаВалют.Валюта;
		Серия.Цвет = ОбщегоНазначенияУИ.ЦветRGB(ВыборкаВалют.ЦветR, ВыборкаВалют.ЦветG, ВыборкаВалют.ЦветB);
		
		Для каждого ТекущийПериод Из ДополнениеПериода Цикл
			
			Если Выборка.НайтиСледующий(Новый Структура("Период", ТекущийПериод)) Тогда
				Если Выборка.ЕстьОстаток Тогда
					Сумма = Выборка.Сумма;
					СохраненноеЗначение = Выборка.СуммаВВалюте;
				Иначе
					Сумма = СохраненноеЗначение * Выборка.Курс;
				КонецЕсли;
			КонецЕсли;
			
			Если Этот.Параметры.Интервал = Перечисления.ИнтервалПериода.Месяц Тогда
				СтрокаТаб = ТабРезультат.Добавить();
				СтрокаТаб.Период = ТекущийПериод;
				СтрокаТаб.Сумма = Сумма;
				СтрокаТаб.СуммаВВалюте = СохраненноеЗначение;
				СтрокаТаб.Валюта = ВыборкаВалют.Валюта;
			ИначеЕсли ТекущийПериод = НачалоМесяца(ТекущийПериод)
				Или ДополнениеПериода.Найти(ТекущийПериод) = 0 
				Или ДополнениеПериода.Найти(ТекущийПериод) = ДополнениеПериода.Количество()-1 Тогда
				СтрокаТаб = ТабРезультат.Добавить();
				СтрокаТаб.Период = ТекущийПериод;
				СтрокаТаб.Сумма = Сумма;
				СтрокаТаб.СуммаВВалюте = СохраненноеЗначение;
				СтрокаТаб.Валюта = ВыборкаВалют.Валюта;
			КонецЕсли;
			
			Точка = Этот.Результат.УстановитьТочку(
				Формат(ТекущийПериод, ДашбордыФормы.ФорматДаты(Этот.Параметры.Интервал)));
			Этот.Результат.УстановитьЗначение(Точка, Серия, Сумма);
			
		КонецЦикла;
		
	КонецЦикла;
	
	ТабДок = Этот.ПриватныеСвойства.РезультатТаблица;
	Макет = ПолучитьОбщийМакет("ОтчетДвижениеСредств");
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ТабДок.Вывести(ОбластьЗаголовок);
	
	ОбластьГруппировкаТаблицы = Макет.ПолучитьОбласть("ГруппировкаТаблицы");
	ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
	
	ПрежняяВалюта = Неопределено;
	
	Для каждого СтрокаТаб Из ТабРезультат Цикл
		
		Если ПрежняяВалюта <> СтрокаТаб.Валюта Тогда
			ОбластьГруппировкаТаблицы.Параметры.Валюта = СтрокаТаб.Валюта;
			ТабДок.Вывести(ОбластьГруппировкаТаблицы);
			ПрежняяВалюта = СтрокаТаб.Валюта;
		КонецЕсли;
		
		ОбластьСтрокаТаблицы.Параметры.Период = СтрокаТаб.Период;
		ОбластьСтрокаТаблицы.Параметры.Валюта = СтрокаТаб.Валюта;
		ОбластьСтрокаТаблицы.Параметры.Сумма =  СтрокаТаб.Сумма;
		ОбластьСтрокаТаблицы.Параметры.СуммаВВалюте = СтрокаТаб.СуммаВВалюте;
		ТабДок.Вывести(ОбластьСтрокаТаблицы);
		
	КонецЦикла;
	//
	//ОбластьИтоги = Макет.ПолучитьОбласть("ИтогиТаблицы");
	//ОбластьИтоги.Параметры.Сумма = СуммаИтого;
	//ТабДок.Вывести(ОбластьИтоги);
	
	Этот.ПриватныеСвойства.РезультатТаблица = ТабДок;
	
КонецПроцедуры

Процедура ЗадатьНачальныеНастройки(Этот)
	
	Этот.Результат.ТипДиаграммы = ТипДиаграммы.ГрафикСОбластямиИНакоплением;
	Этот.Результат.ОтображатьЛегенду = Ложь;
	Этот.Результат.ОтображатьЗаголовок = Ложь;
	Этот.Результат.АвтомаксимальноеЗначение = Ложь;
	Этот.Результат.АвтоминимальноеЗначение = Ложь;

	Этот.Результат.ОбластьПостроения.ОтображатьШкалу = Истина;
	Этот.Результат.ОбластьПостроения.ЛинииШкалы = Новый Линия(ТипЛинииДиаграммы.Сплошная);
	Этот.Результат.ОбластьПостроения.Лево = 0.01;
	Этот.Результат.ОбластьПостроения.ОтображатьЛинииЗначенийШкалы = Истина;
	Этот.Результат.ОбластьПостроения.ЛинииШкалы = Новый Линия(ТипЛинииДиаграммы.Пунктир);
	
	Этот.Результат.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.БезРамки); 
	
	Этот.Параметры.Вставить("Интервал");
	Этот.Параметры.Вставить("НачалоПериода");
	Этот.Параметры.Вставить("ОкончаниеПериода");
	Этот.Параметры.Вставить("Валюта", Справочники.Валюты.ПустаяСсылка());
	
	ОбработчикЛегенды = Новый Структура("ИмяСобытия,Действие");
	Этот.ПриватныеСвойства.Вставить("ОбработчикЛегенды", ОбработчикЛегенды);
	
	Этот.ПриватныеСвойства.Вставить("ГруппаЭлементаЛегенды");
	
	Этот.ПриватныеСвойства.Вставить("РезультатТаблица", Новый ТабличныйДокумент);
	
КонецПроцедуры
