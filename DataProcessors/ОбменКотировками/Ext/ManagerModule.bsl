
Процедура СформироватьФайлВыгрузки(Параметры, АдресХранилища) Экспорт
	
	ЗаписьJson = Новый ЗаписьJSON;
	ИмяФайла = ПолучитьИмяВременногоФайла();
	ЗаписьJson.ОткрытьФайл(ИмяФайла);
	ТаблицыДанных = ПрочитатьДанныеДляВыгрузки();
	ЗаписатьJSON(ЗаписьJson, ТаблицыДанных);
	ЗаписьJson.Закрыть();
	
	Результат = Новый Структура;
	Результат.Вставить("Команда", "Выгрузка");
	Результат.Вставить("Файл", Новый ДвоичныеДанные(ИмяФайла));
	
	ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
	
КонецПроцедуры

Функция ПрочитатьДанныеДляВыгрузки()
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КурсыВалют.Валюта КАК Валюта,
	|	КурсыВалют.Курс КАК Курс,
	|	КурсыВалют.Кратность КАК Кратность,
	|	КурсыВалют.Период КАК Период
	|ИЗ
	|	РегистрСведений.КурсыВалют КАК КурсыВалют
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КурсыТоварныхРынков.Период,
	|	КурсыТоварныхРынков.Номенклатура,
	|	КурсыТоварныхРынков.Валюта,
	|	КурсыТоварныхРынков.Курс
	|ИЗ
	|	РегистрСведений.КурсыТоварныхРынков КАК КурсыТоварныхРынков";
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	
	ДанныеДляВыгрузки = Новый Структура();
	ДанныеДляВыгрузки.Вставить("КурсыВалют", ПакетЗапросов[0].Выгрузить());
	ДанныеДляВыгрузки.Вставить("КурсыТоваров", ПакетЗапросов[1].Выгрузить());

	Возврат ДанныеДляВыгрузки; 
	
КонецФункции

Процедура ЗагрузитьКотировки(Параметры, АдресХранилища) Экспорт
	
	
	ЧтениеJson = Новый ЧтениеXML;
	ЧтениеJson.ОткрытьФайл(Параметры);
	СериализаторXDTO.ПрочитатьJSON(ЧтениеJson);
	
	
	
КонецПроцедуры
