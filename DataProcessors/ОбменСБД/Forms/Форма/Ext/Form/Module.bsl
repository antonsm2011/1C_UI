&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПодготовитьФормуНаСервере();
	
	//БазаРаботников.dbo_AddEmployee("1cName","1сFame");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ПодключатьсяАвтоматически Тогда
		ВыполнитьПодключениеКБД();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НастройкиПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	
	Если ТекущаяСтраница = Элементы.СоставОбмена И ДанныеОбмена.Количество() Тогда
		ОбновитьТаблицыДляОбмена();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодключитьсяБД(Команда)
	
	ВыполнитьПодключениеКБД();
	
КонецПроцедуры

#КонецОбласти

#Область АбстракцияФоновогоЗадания

&НаКлиенте
Процедура ЗапуститьВыполнениеЗадания(НаименованиеЗадания, ИмяПроцедуры, ПараметрыЗадания = Неопределено)

	Попытка
		Результат = ЗапуститьВыполнениеВФоне(УникальныйИдентификатор, НаименованиеЗадания, ПараметрыЗадания, ИмяПроцедуры);
		АдресХранилища = Результат.АдресХранилища;
		ИдентификаторЗадания = Результат.ИдентификаторЗадания;
		
		Если Не Результат.ЗаданиеВыполнено Тогда
			ПродолжитьВыполнениеЗадания();
		Иначе
			РезультатВыполненияЗадания();
		КонецЕсли;
	Исключение
		УправлениеРеквизитамиАктивностиВыполнения(Истина, ИнформацияОбОшибке().Описание);
	КонецПопытки;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗапуститьВыполнениеВФоне(ИдФормы, НаименованиеЗадания, ПараметрыЗадания, ИмяПроцедуры)
	
	Возврат ДлительныеОперации.ЗапуститьВыполнениеВФоне
		(ИдФормы, ИмяПроцедуры, ПараметрыЗадания, НаименованиеЗадания);
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
	
	Попытка 
		Если ЗаданиеВыполнено(ИдентификаторЗадания) Тогда
			РезультатВыполненияЗадания();
		Иначе
			ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
			ПодключитьОбработчикОжидания(
				"Подключаемый_ПроверитьВыполнениеЗадания", ПараметрыОбработчикаОжидания.ТекущийИнтервал, Истина);
		КонецЕсли
	Исключение
		
		ИнформацияОбОшибке = ПолучитьИнфоНаСервере(ИдентификаторЗадания);
		УправлениеРеквизитамиАктивностиВыполнения(Истина, ИнформацияОбОшибке);
	КонецПопытки;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(ИдентификаторЗадания)
	
	Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
	
КонецФункции

&НаКлиенте
Процедура ПродолжитьВыполнениеЗадания()
	
	ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
	ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);
	
	УправлениеРеквизитамиАктивностиВыполнения(Ложь, "ЗаданиеВыполняется");
	
КонецПроцедуры

&НаКлиенте
Функция РезультатВыполненияЗадания()
	
	Результат = ПолучитьИзВременногоХранилища(АдресХранилища);
	
	СтатусПодключения = Результат.СтатусПодключения;
	
	УправлениеРеквизитамиАктивностиВыполнения(Истина, Результат.КодСтатуса);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьИнфоНаСервере(ИдЗадания)
	
	Задание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(Новый УникальныйИдентификатор(ИдЗадания));
	
	Возврат Задание.ИнформацияОбОшибке.Описание;
	
КонецФункции

#КонецОбласти

#Область ПодключениеКБД

&НаКлиенте
Процедура ВыполнитьПодключениеКБД()
	
	ОчиститьСтатусы();
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПодключения = Новый Структура;
	ПараметрыПодключения.Вставить("ТипСУБД", ТипСУБД);
	ПараметрыПодключения.Вставить("Сервер", Сервер);
	ПараметрыПодключения.Вставить("Логин", Логин);
	ПараметрыПодключения.Вставить("Пароль", Пароль);
	
	НаименованиеЗадания = "ru = 'Подключение к СУБД'";
	ИмяПроцедуры = "Обработки.ОбменСБД.ПодключитьсяКБД";
	
	ЗапуститьВыполнениеЗадания(НаименованиеЗадания, ИмяПроцедуры, ПараметрыПодключения);
	
КонецПроцедуры

#КонецОбласти

#Область ЗагрузкаSQLТаблиц

&НаКлиенте
Процедура ОбновитьТаблицыДляОбмена()
	
	Если СтатусПодключения = ПредопределенноеЗначение("Перечисление.СтатусыПодключения.Отключен")  Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьСтатусы();
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	НаименованиеЗадания = "ru = 'Обновление таблиц отчета'";
	ИмяПроцедуры = "Обработки.ОбменСБД.ОбновлениеТаблицОтчета";
	
	ЗапуститьВыполнениеЗадания(НаименованиеЗадания, ИмяПроцедуры);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции


&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ПоддерживаемыеСУБД = Обработки.ОбменСБД.ПоддерживаемыеСУБД();
	
	ТипСУБД = ПоддерживаемыеСУБД[0];
		
	Элементы.ТипСУБД.СписокВыбора.ЗагрузитьЗначения(ПоддерживаемыеСУБД);
	
КонецПРоцедуры

&НаКлиенте
Процедура УправлениеРеквизитамиАктивностиВыполнения(ЗаданиеЗавершено, КодСтатуса)
	
	Элементы.КартинкаВыполнения.Видимость = Не ЗаданиеЗавершено;
	Элементы.КартинкаОК.Видимость = ЗаданиеЗавершено;
	Элементы.ТекстСтатус.Заголовок = ТекстСтатуса(КодСтатуса);
	Элементы.ПодключитьсяБД.Доступность = ЗаданиеЗавершено;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьСтатусы()
	
	Элементы.ТекстСтатус.Заголовок = "";
	
КонецПроцедуры

&НаКлиенте
Функция ТекстСтатуса(КодСтатуса)
	
	Если КодСтатуса = "ПодключениеУстановлено" Тогда
		Возврат НСтр("ru = 'Подключение к БД установлено.'");
	ИначеЕсли КодСтатуса = "ОшибкаПодключения" Тогда
		Возврат НСтр("ru = 'Ошибка при подключении к БД.'");
	ИначеЕсли КодСтатуса  = "ЗаданиеВыполняется" Тогда
		Возврат НСтр("ru = 'Подождите...'");
	Иначе
		Возврат КодСтатуса;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

