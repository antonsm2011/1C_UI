#Область ПрограммныйИнтерфейс

Процедура Создать (Этот) Экспорт
	
	Этот.ТипДиаграммы = Неопределено;
	
	ЗадатьНачальныеНастройки(Этот);
	
КонецПроцедуры

Процедура СФормировать(Этот) Экспорт
	
	Для каждого Параметр Из Этот.Параметры Цикл
		
		Если Не ЗначениеЗаполнено(Параметр.Значение) Тогда
			КодОшибки = 1;
			Дашборды.СообщитьОбОшибке(КодОшибки);
		КонецЕсли;
		
	КонецЦикла;
	
	СформироватьВсегоЗаработано(Этот);
	
КонецПроцедуры

Процедура РазместитьВИнтерфейсе(Форма, Этот) Экспорт
	
	Этот.ПриватныеСвойства.ОбработчикЗагрузкиКурсов.ИмяСобытия = "Нажатие";
	Этот.ПриватныеСвойства.ОбработчикЗагрузкиКурсов.Действие = "ЗагрузитьКурсыВалют";
	
	Столбцы = "ДекорацияВалюта%,ДекорацияВалюта%Поступление%,ДекорацияВалюта%Списание%,ДекорацияВалюта%ОсновнаяСумма%";
	Родители = "ВсегоЗаработаноВалюта,ВсегоЗаработаноПоступление,ВсегоЗаработаноСписание,ВсегоЗаработаноВОсновной";
	
	Если Этот.Результат.Количество() > 0 Тогда
		Форма.Элементы.ВсегоЗаработаноРезультат.Видимость = Истина;
		Форма.Элементы.ВсегоЗаработаноПусто.Видимость = Ложь;
		ДашбордыФормы.ЗаполнитьЭлементыФормыПоТаблице(Форма, Этот.Результат, Столбцы, Родители);
	Иначе
		Форма.Элементы.ВсегоЗаработаноРезультат.Видимость = Ложь;
		Форма.Элементы.ВсегоЗаработаноПусто.Видимость = Истина;
	КонецЕсли;
	
	//СтолбецКурсНеактулен = "ДекорацияВалюта%КурсНеактуален%";
	//РодительКурсНеактуален = "ВсегоЗаработаноКурсНеактуален";

	//ДашбордыФормы.УстановитьПризнакНеактуальностиКурсаВалюты(Форма, Этот, СтолбецКурсНеактулен, РодительКурсНеактуален);
	//
	
КонецПроцедуры

#КонецОбласти

Процедура СформироватьВсегоЗаработано(Этот)
	
	ОсновнаяВалюта = Константы.ОсновнаяВалюта.Получить();
	ЦветНеактуальности = ЦветаСтиля.ПросроченныеДанныеЦвет;
	ДатаСегодня = НачалоДня(ТекущаяДатаСеанса());
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Дата", Новый Граница(Этот.Параметры.Дата, ВидГраницы.Включая));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДоступныеСредстваОстаткиИОбороты.Валюта.Наименование КАК Валюта,
	|	ЕСТЬNULL(ДоступныеСредстваОстаткиИОбороты.СуммаВВалютеПриход, 0) КАК Поступление,
	|	ЕСТЬNULL(ДоступныеСредстваОстаткиИОбороты.СуммаВВалютеРасход, 0) КАК Списание,
	|	(ЕСТЬNULL(ДоступныеСредстваОстаткиИОбороты.СуммаВВалютеПриход, 0) - ЕСТЬNULL(ДоступныеСредстваОстаткиИОбороты.СуммаВВалютеРасход, 0)) * ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 1) * ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0) КАК ОстатокВОсновнойВалюте,
	|	ДоступныеСредстваОстаткиИОбороты.Валюта.Символ КАК Символ,
	|	ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0) КАК Курс,
	|	ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 1) КАК Кратность,
	|	ЕСТЬNULL(КурсыВалютСрезПоследних.Период, ДАТАВРЕМЯ(1, 1, 1, 1, 1, 1)) КАК ПериодКурса,
	|	ЕСТЬNULL(КурсыВалютСрезПоследних.Валюта, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК ВалютаСсылка
	|ИЗ
	|	РегистрНакопления.ДоступныеСредства.ОстаткиИОбороты(, &Дата, , , ) КАК ДоступныеСредстваОстаткиИОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютСрезПоследних
	|		ПО ДоступныеСредстваОстаткиИОбороты.Валюта = КурсыВалютСрезПоследних.Валюта
	|
	|УПОРЯДОЧИТЬ ПО
	|	Валюта";
	
	ТЗЗапроса = Запрос.Выполнить().Выгрузить();
	
	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("Валюта");
	Результат.Колонки.Добавить("Поступление",Новый ОписаниеТипов("Строка"));
	Результат.Колонки.Добавить("Списание",Новый ОписаниеТипов("Строка"));
	Результат.Колонки.Добавить("ПрибыльВОсновнойВалюте",Новый ОписаниеТипов("Строка, ФорматированнаяСтрока"));
	Результат.Колонки.Добавить("Цвет");
	Результат.Колонки.Добавить("КурсНеактуален", Новый ОписаниеТипов("Булево"));

	ИмяОсновнойВалюты = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОсновнаяВалюта,"Символ");
	ИтогоВОсновной = 0;
	Для каждого СтрокаТЗ Из ТЗЗапроса Цикл
		
		//Остаток = РаботаСВалютами.ПересчитатьВВалюту(СтрокаТЗ.Остаток, СтрокаТЗ.Валюта, ОснВалюта, Этот.Параметры.Дата);
		
		СтрокаРезультата = Результат.Добавить();
		СтрокаРезультата.Валюта = СтрокаТЗ.Валюта;
		
		СтрокаРезультата.Поступление = ДашбордыФормы.ФорматДенежнойЕдиницы(СтрокаТЗ.Поступление, СтрокаТЗ.Символ);
		
		СтрокаРезультата.Списание = ДашбордыФормы.ФорматДенежнойЕдиницы(СтрокаТЗ.Списание, СтрокаТЗ.Символ);
		
		// Неатуальность курсов показываем в другом месте
		//Если СтрокаТЗ.ВалютаСсылка <> ОсновнаяВалюта И НачалоДня(СтрокаТЗ.ПериодКурса) <> ДатаСегодня Тогда
		//	 СтрокаРезультата.КурсНеактуален = Истина
		//Иначе
		//	СтрокаРезультата.КурсНеактуален = Ложь;
		//КонецЕсли;
		
		СтрокаРезультата.ПрибыльВОсновнойВалюте = ДашбордыФормы.ФорматДенежнойЕдиницы(СтрокаТЗ.ОстатокВОсновнойВалюте, ИмяОсновнойВалюты);
		
		ИтогоВОсновной = ИтогоВОсновной + СтрокаТЗ.ОстатокВОсновнойВалюте;
	КонецЦикла;
	
	Если Результат.Количество() > 0 Тогда
	
		СтрокаРезультата = Результат.Добавить();
		СтрокаРезультата.Валюта = Новый ФорматированнаяСтрока("" +НСтр("ru = 'Итого:'"), ШрифтыСтиля.ШрифтСумма);
		СтрокаРезультата.ПрибыльВОсновнойВалюте = Новый ФорматированнаяСтрока(ДашбордыФормы.ФорматДенежнойЕдиницы(ИтогоВОсновной, ИмяОсновнойВалюты, 0),ШрифтыСтиля.ШрифтСумма);
		
	КонецЕсли;
	
	Этот.Результат = ОбщегоНазначения.ТаблицаЗначенийВМассив(Результат);
	
КонецПроцедуры

Процедура ЗадатьНачальныеНастройки(Этот)
	
	Этот.Параметры.Вставить("Дата");
	
	Обработчик = Новый Структура("ИмяСобытия,Действие");
	Этот.ПриватныеСвойства.Вставить("ОбработчикЗагрузкиКурсов", Обработчик);
	
КонецПроцедуры
