
#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗаполнитьЛегенду(Форма, ДашбордОбъект) Экспорт
	
	Диаграмма = ДашбордОбъект.Результат;
	
	Счетчик = 0;
	Для каждого Серия Из Диаграмма.Серии Цикл
		
		ПостфиксИмени = Строка(ДашбордОбъект.Вид);
		
		ИмяЦветаСерии = "Цвет" + ПостфиксИмени + Строка(Счетчик);
		ЦветСерии = Форма.Элементы.Найти(ИмяЦветаСерии);
		Если ЦветСерии = Неопределено Тогда
			
			ЦветСерии = Форма.Элементы.Добавить(
				ИмяЦветаСерии,
				Тип("ДекорацияФормы"),
				Форма.Элементы[ДашбордОбъект.ПриватныеСвойства.ГруппаЭлементаЛегенды]);
				
		КонецЕсли;
			
		ЦветСерии.ЦветФона = Серия.Цвет;
		ЦветСерии.Ширина = 2;
		
		ИмяНадписьСерии = "Надпись" + ПостфиксИмени + Строка(Счетчик);
		НадписьСерии = Форма.Элементы.Найти(ИмяНадписьСерии);
		Если НадписьСерии = Неопределено Тогда
			
			НадписьСерии =  Форма.Элементы.Добавить(
				ИмяНадписьСерии,
				Тип("ДекорацияФормы"),
				Форма.Элементы[ДашбордОбъект.ПриватныеСвойства.ГруппаЭлементаЛегенды]);
				
		КонецЕсли;
			
		НадписьСерии.Заголовок = Серия.текст;
		
		НадписьСерии.Гиперссылка = Истина;
		НадписьСерии.УстановитьДействие(
			ДашбордОбъект.ПриватныеСвойства.ОбработчикЛегенды.ИмяСобытия,
			ДашбордОбъект.ПриватныеСвойства.ОбработчикЛегенды.Действие);
		
		Счетчик = Счетчик + 1;
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет свойство заголовок полей формы данными из таблицы значений.
// Структура поле формый и колонк таблиц должна совпадать по именам.
//
// Параметры:
//  Форма            - УправляемаяФорма - форма на которой расположены элементы.
//  Коллекция          - ТаблицаЗначений -  таблица из которой берутся данные.
//  ИменаСтолбцов	 - Строка - Имена столбцов таблицы через запятую, из которых берутся данные
//                              Строки разделяются знаком %.
//  ИменаРодителей	 - Строка - Имена родителей элементов формы для столбцов.
//
Процедура ЗаполнитьЭлементыФормыПоТаблице(Форма, Коллекция, ИменаСтолбцов, ИменаРодителей, ДопПараметры = Неопределено) Экспорт
	
	СтолбикиТаблицы = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаСтолбцов,",");
	РодителиТаблицы = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаРодителей,",");
	глСчетчик = 0;
	
	Если ТипЗнч(Коллекция) = Тип("Массив") Тогда
		Таблица = ОбщегоНазначенияУИ.МассивВТаблицуЗначений(Коллекция);
	КонецЕсли;
	
	Для каждого СтрокаРезультата Из Таблица Цикл
		
		
		Для Счетчик = 0 По СтолбикиТаблицы.Количество() - 1 Цикл
			
			ИмяЭлемента = СтрЗаменить(СтолбикиТаблицы[Счетчик], "%", глСчетчик);
			ИмяРодителя = СтрЗаменить(РодителиТаблицы[Счетчик], "%", глСчетчик);
			
			ЭлементФормы = ИдентифицироватьЭлемент(Форма, ИмяЭлемента, Тип("ДекорацияФормы"), Форма.Элементы[ИмяРодителя]);

			ЭлементФормы.Заголовок = СтрокаРезультата[Счетчик];
			
			ЭлементФормы.Видимость = Истина;
			ЭлементФормы.АвтомаксимальнаяШирина = Ложь;
			ЭлементФормы.АвтомаксимальнаяВысота = Ложь;

			ЭлементФормы.РастягиватьПоГоризонтали = Истина;
			ЭлементФормы.РастягиватьПоВертикали = Истина;
		КонецЦикла;
		
		Если ТипЗнч(ДопПараметры) =Тип("Структура") Тогда
			
			Для каждого КлючИЗначение Из ДопПараметры Цикл
				
				Если КлючИЗначение.Ключ = "Цвет" Тогда
					ИмяЭлемента = СтрЗаменить(КлючИЗначение.Значение,"%",глСчетчик);
					ЭлементФормы = Форма.Элементы[ИмяЭлемента];
					
					Если ТипЗнч(СтрокаРезультата.Цвет) = Тип("Цвет") Тогда
						ЭлементФормы.ЦветТекста = СтрокаРезультата.Цвет;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		глСчетчик = глСчетчик + 1;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ФорматДенежнойЕдиницы(Сумма, СимволВалюты, ТочностьЧисла = 0) Экспорт
	
	ФорматСтроки = "ЧДЦ=%1";
	ФорматСтроки = СтрШаблон(ФорматСтроки, ТочностьЧисла);
	
	Если Сумма = 0 Тогда
		Возврат "0";
	Иначе
		Возврат Строка(Формат(Сумма,ФорматСтроки)) + СимволВалюты;
	КонецЕсли;
	
КонецФункции

// Возвращает формат для дашбордов в виде графиков или диаграмм
//
// Параметры:
//  Интервал - ПеречислениеСсылка.ИнтервалПериода - интервал для которого рассчитывается формат.
// 
// Возвращаемое значение:
//  Строка - формат даты для использования в диаграмах.
//
Функция ФорматДаты(Интервал) Экспорт
	
	Если Интервал = Перечисления.ИнтервалПериода.Месяц 
		Или Интервал = Перечисления.ИнтервалПериода.Квартал тогда
		
		Возврат "ДФ='dd MMM'";
	Иначе
		Возврат "ДФ='MMM yyy'";
	КонецЕсли;
	
КонецФункции

Процедура УстановитьПризнакНеактуальностиКурсаВалюты(Форма, ДашбордОбъект, ИмяСтолбца, ИмяРодителя) Экспорт
	
	глСчетчик = 0;

	КартинкаПредупреждения = БиблиотекаКартинок.ВосклицательныйЗнакКрасный;
	
	Для каждого СтрокаРезультата Из ДашбордОбъект.Результат Цикл
		
		ИмяЭлемента = СтрЗаменить(ИмяСтолбца,"%",глСчетчик);
		ИмяГруппы = СтрЗаменить(ИмяРодителя,"%",глСчетчик);

		ЭлементФормы = ИдентифицироватьЭлемент(Форма, ИмяЭлемента, Тип("ДекорацияФормы"), Форма.Элементы[ИмяГруппы]);

		ЭлементФормы.Заголовок = "";
		ЭлементФормы.Видимость = Истина;
			
		Если СтрокаРезультата.КурсНеактуален тогда
			ЭлементФормы.Вид = ВидДекорацииФормы.Картинка; 
			ЭлементФормы.Картинка = КартинкаПредупреждения;
			ЭлементФормы.Гиперссылка = Истина;
			ЭлементФормы.Подсказка = НСтр("ru = 'Курс валюты не актуален! Нажмите, чтобы обновить из интернета.'");
			ЭлементФормы.Высота = 1;
		Иначе
			ЭлементФормы.Вид = ВидДекорацииФормы.Надпись; 
		КонецЕсли;
		
		Если ДашбордОбъект.ПриватныеСвойства.Свойство("ОбработчикЗагрузкиКурсов") Тогда
			ИмяСобытия = ДашбордОбъект.ПриватныеСвойства.ОбработчикЗагрузкиКурсов.ИмяСобытия;
			Действие = ДашбордОбъект.ПриватныеСвойства.ОбработчикЗагрузкиКурсов.Действие;
			ЭлементФормы.УстановитьДействие(ИмяСобытия, Действие);
		КонецЕсли;
		
		глСчетчик = глСчетчик + 1;
		
	КонецЦикла;

КонецПроцедуры

Функция ЦветДенежнойЕдиницы(R, G, B) Экспорт
	
	Возврат Новый Цвет(R, G, B);
	
КонецФункции

#КонецОбласти

Функция ИдентифицироватьЭлемент (Форма, Имя, Тип, Родитель)
	
	ЭлементФормы = Форма.Элементы.Найти(Имя);
	
	Если ЭлементФормы = Неопределено Тогда
		ЭлементФормы = Форма.Элементы.Добавить(Имя, Тип, Родитель);
	КонецЕсли;
	
	Возврат ЭлементФормы;
	
КонецФункции


