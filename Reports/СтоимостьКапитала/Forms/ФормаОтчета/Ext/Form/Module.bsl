
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("НачалоПериода") Тогда
		НачалоПериода = Параметры.НачалоПериода;
	КонецЕсли;
	
	Если Параметры.Свойство("ОкончаниеПериода") Тогда
		КонецПериода = Параметры.ОкончаниеПериода;
	КонецЕсли;
	
	Если Параметры.Свойство("Интервал") Тогда
		Если Параметры.Интервал = Перечисления.ИнтервалПериода.Квартал Тогда
			Интервал = Перечисления.ИнтервалПериода.Месяц;
		Иначе
			Интервал = Параметры.Интервал;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("БуквенныйКодВалюты") тогда
		
		Валюта = Справочники.Валюты.НайтиПоНаименованию(Параметры.БуквенныйКодВалюты);
		ОтборПоВалюте = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("СформироватьПриОткрытии") Тогда
		СформироватьОтчет(Результат, РезультатКурсы, РезультатТаблица, НачалоПериода, КонецПериода, Интервал, Валюта);
	КонецЕсли;

	Элементы.Результат.Заголовок = СтрШаблон(НСтр("ru = 'Стоимость капитала с пересчетом в %1'"), 
		ПараметрыСеанса.ОсновнаяВалюта);
	
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СформироватьОтчет(Результат, РезультатКурсы, РезультатТаблица, НачалоПериода, КонецПериода, Интервал, Валюта)
	
	РезультатТаблица.Очистить();
	
	ИндексВСписке = Перечисления.ВидыДашбордов.Индекс(Перечисления.ВидыДашбордов.СтоимостьКапитала);
	ИмяДашборда = Метаданные.Перечисления.ВидыДашбордов.ЗначенияПеречисления[ИндексВСписке].Имя;
	
	СтоимостьКапитала = Дашборды.Создать(ИмяДашборда);
	СтоимостьКапитала.Параметры.НачалоПериода = НачалоПериода;
	СтоимостьКапитала.Параметры.ОкончаниеПериода = КонецПериода;
	СтоимостьКапитала.Параметры.Интервал = Интервал;
	СтоимостьКапитала.Параметры.Валюта = Валюта;

	ДашбордыСтоимостьКапитала.Сформировать(СтоимостьКапитала);
	
	РезультатТаблица = СтоимостьКапитала.ПриватныеСвойства.РезультатТаблица;
	Результат = СтоимостьКапитала.Результат;
	
	Результат.ТипДиаграммы = ТипДиаграммы.ГрафикСОбластямиИНакоплением;
	Результат.ОтображатьЛегенду = Истина;
	Результат.АвтомаксимальноеЗначение = Ложь;
	Результат.АвтоминимальноеЗначение = Ложь;
	Результат.ОбластьПостроения.Лево = 0;
	Результат.ОбластьПостроения.Право = 0.8;
	Результат.ОбластьПостроения.ОтображатьЛинииЗначенийШкалы = Истина;
	
	Результат.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.БезРамки); 
	
	ИндексВСписке = Перечисления.ВидыДашбордов.Индекс(Перечисления.ВидыДашбордов.КурсыВалют);
	ИмяДашборда = Метаданные.Перечисления.ВидыДашбордов.ЗначенияПеречисления[ИндексВСписке].Имя;

	КурсыВалют = Дашборды.Создать(ИмяДашборда);
	КурсыВалют.Параметры.НачалоПериода = НачалоПериода;
	КурсыВалют.Параметры.ОкончаниеПериода = КонецПериода;
	КурсыВалют.Параметры.Интервал = Интервал;
	КурсыВалют.Параметры.Валюта = Валюта;

	ДашбордыКурсыВалют.СФормировать(КурсыВалют);
	РезультатКурсы = КурсыВалют.Результат;
	
	РезультатКурсы.ОтображатьЛегенду = Истина;
	РезультатКурсы.АвтомаксимальноеЗначение = Ложь;
	РезультатКурсы.АвтоминимальноеЗначение = Ложь;
	РезультатКурсы.ОбластьПостроения.Лево = 0;
	РезультатКурсы.ОбластьПостроения.Право = 0.8;
	РезультатКурсы.ОбластьПостроения.ОтображатьЛинииЗначенийШкалы = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчетКлиент(Команда)
	
	СформироватьОтчет(Результат, РезультатКурсы, РезультатТаблица, НачалоПериода, КонецПериода, Интервал, Валюта);
	
КонецПроцедуры

&НаКлиенте
Процедура КонецПериодаПриИзменении(Элемент)
	
	Интервал = ПредопределенноеЗначение("Перечисление.ИнтервалПериода.Произвольный");
	
КонецПроцедуры

&НаКлиенте
Процедура НачалоПериодаПриИзменении(Элемент)
	
	Интервал = ПредопределенноеЗначение("Перечисление.ИнтервалПериода.Произвольный");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоВалютеПриИзменении(Элемент)
	
	ДоступностьВалюты();
	
КонецПроцедуры

Процедура ДоступностьВалюты()
	
	Элементы.Валюта.Доступность = ОтборПоВалюте;
	
	Если Не ОтборПоВалюте Тогда
		Валюта = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

